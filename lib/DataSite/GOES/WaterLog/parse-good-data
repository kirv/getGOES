#!/usr/bin/perl -w
use strict;
use warnings;

my $tob = '/usr/local/bin/tob';

my $store_to_objects;
while ( my $opt = shift ) {
    if ( $opt eq '--store' ) {
        $store_to_objects = 1;
        }
    else {
        die "unknown argument: $opt\n";
        }
    }

open STDIN, '<', "ingest/\@good" or die $!;

my $timestamp = <>;
# print $timestamp;

<>; # discard dcp header fields

my ($year, $day, $hour, $minute, $second) =
    $timestamp =~ m/(\d{4})-(\d{3})T(\d\d):(\d\d):(\d\d)Z/;

# prepare times for hourly, 1/2-hour, 15-min data

my $min15 = $minute - $minute % 15;
my $min30 = $minute - $minute % 30;

my $ysec_hourly = ($day-1) * 86400 + $hour * 3600;
my $ysec_last15 = ($day-1) * 86400 + ( $hour * 60 + $min15 ) * 60;
my $ysec_last30 = ($day-1) * 86400 + ( $hour * 60 + $min30 ) * 60;

# print "__time=$hour:$minute\nlast15=$hour:$min15\nlast30=$hour:$min30\nlast60=$hour:00\n";

my @tob_new_commands;

while ( <> ) {
    chomp;
    next if m/^\s*$/;

    my ( $tag, @values ) = split / /;

    # check that initial value exists and is numeric:
    unless ( @values ) {
        warn "no data parsed with $tag\n";
        next;
        }
    
    unless ( $values[0] =~ m/^-?[\d.]+/ ) {
        warn "non-numeric value in '$tag @values'\n";
        next;
        }
    
    my $ysec;
    my $interval;
    if ( @values == 1 ) {
        $ysec = $ysec_hourly;
        $interval = 3600;
        }
    elsif ( @values == 2 ) {
        $ysec = $ysec_last30;
        $interval = 1800;
        }
    elsif ( @values == 4 ) {
        $ysec = $ysec_last15;
        $interval = 900;
        }
    else {
        die "should not happen\n";
        }
    foreach my $value ( @values ) {
        push @tob_new_commands, 
            "$tob raw/$tag.store --time $year,$ysec -- $value";
        $ysec -= $interval;
        }
    }

my $good = 0;
my $fail = 0;
foreach my $command ( @tob_new_commands ) {
    print "$command\n";
    next unless $store_to_objects;
    if ( system("$command") == 0 ) { 
        $good += 1;
        }
    else { 
        $fail += 1;
        }
    }


